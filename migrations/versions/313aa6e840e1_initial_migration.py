"""Initial Migration

Revision ID: 313aa6e840e1
Revises: 
Create Date: 2023-06-04 16:12:30.279973

"""
import pgvector
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "313aa6e840e1"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("customer_id", sa.String(), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "customer_subscriptions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("updated_at", sa.Integer(), nullable=False),
        sa.Column("current_period_start", sa.Integer(), nullable=False),
        sa.Column("current_period_end", sa.Integer(), nullable=False),
        sa.Column("cancel_at_period_end", sa.Boolean(), nullable=False),
        sa.Column("cancel_at", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_channels",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "platform", sa.Enum("TELEGRAM", "DISCORD", name="platform"), nullable=False
        ),
        sa.Column("platform_user_id", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "prompt_messages",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("prompt_tokens", sa.Integer(), nullable=False),
        sa.Column("completion_tokens", sa.Integer(), nullable=False),
        sa.Column("cost", sa.Float(precision=8), nullable=False),
        sa.Column("openai_embedding", pgvector.sqlalchemy.Vector(), nullable=True),
        sa.Column("channel_id", sa.Integer(), nullable=False),
        sa.Column("sender_id", sa.UUID(), nullable=False),
        sa.Column(
            "receiver_id",
            sa.Enum("SYSTEM", "GPT_3_5_TURBO", "GPT_4", "DALL_E", name="system_user"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["users_channels.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "output_messages",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("openai_embedding", pgvector.sqlalchemy.Vector(), nullable=True),
        sa.Column("prompt_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompt_messages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("output_messages")
    op.drop_table("prompt_messages")
    op.drop_table("users_channels")
    op.drop_table("customer_subscriptions")
    op.drop_table("users")
    # ### end Alembic commands ###
